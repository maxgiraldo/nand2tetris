// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way (in=true, sel=address[12..13], a=ram0, b=ram1,
                                            c=ram2, d=ram3);

    Mux (a=false, b=ram0, sel=load, out=loadRam0);
    Mux (a=false, b=ram1, sel=load, out=loadRam1);
    Mux (a=false, b=ram2, sel=load, out=loadRam2);
    Mux (a=false, b=ram3, sel=load, out=loadRam3);

    RAM4K (in=in, load=loadRam0, address=address[0..11], out=outAddr0);
    RAM4K (in=in, load=loadRam1, address=address[0..11], out=outAddr1);
    RAM4K (in=in, load=loadRam2, address=address[0..11], out=outAddr2);
    RAM4K (in=in, load=loadRam3, address=address[0..11], out=outAddr3);

    Mux4Way16 (a=outAddr0, b=outAddr1,
               c=outAddr2, d=outAddr3,
               sel=address[12..13],
               out=out);
}
